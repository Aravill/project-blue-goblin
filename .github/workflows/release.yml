name: Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'          

      - name: Install ALSA Development Libraries
        run: sudo apt-get update && sudo apt-get install -y libasound2-dev

      - name: Build for Windows
        run: |
          GOOS=windows GOARCH=amd64 go build -o blue-goblin_${{ github.ref_name }}.exe

      - name: Build for Linux
        run: |
          GOOS=linux GOARCH=amd64 go build -o blue-goblin_${{ github.ref_name }}
      
      - name: Prepare Windows Directory
        run: |
          mkdir -p windows-release
          cp -r assets windows-release
          mv blue-goblin_${{ github.ref_name }}.exe windows-release/

      - name: Prepare Linux Directory
        run: |
          mkdir -p linux-release
          cp -r assets linux-release
          mv blue-goblin_${{ github.ref_name }} linux-release/          

      - name: Create Windows Release Archive
        run: |
          cd windows-release
          zip -r ../blue-goblin_${{ github.ref_name }}_windows.zip .
        shell: bash

      - name: Create Linux Release Archive
        run: |
          cd linux-release
          zip -r ../blue-goblin_${{ github.ref_name }}_linux.zip .
        shell: bash        

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      
      - name: Upload Windows Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./blue-goblin_${{ github.ref_name }}_windows.zip
          asset_name: blue-goblin_${{ github.ref_name }}_windows.zip
          asset_content_type: application/zip

      - name: Upload Linux Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./blue-goblin_${{ github.ref_name }}_linux.zip
          asset_name: blue-goblin_${{ github.ref_name }}_linux.zip
          asset_content_type: application/zip      